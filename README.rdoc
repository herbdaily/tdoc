
=Tdoc 

== Test oriented documentation

*note:* Version 0.4.0 completely breaks the API from 0.3.0

Tdoc takes a single argument specifying the file or glob to be processed.  If no arguments are given, Tdoc will process "README.rdoc" in the working directory.

- Tdoc will map each file given to a Test::Unit::TestCase.
- For each such file, named e.g. '_filename_.rdoc', Tdoc will:
  - require '<i>filename</i>.rb' if it exists
  - create a context within the test case for each file in the directory named '_filename_' if it exists.
  - process all :include: directives as follows:
    - If the included file has a .rb extention, it will be required in the context of the test case
    - If it has a .rdoc extention it will map to a context within the test case
    
- In addition to ':include:', Tdoc understands the following directives:
  - example(s): - Text between these directives maps to a Shoulda #should block 
    - within each examples block, Tdoc will convert cut and pastes from irb into assert_equal blocks, so
        >> "asdf"
        => "asdf"
      turns into:
        assert_equal "asdf","asdf"
  Tdoc will then include all assertions within the context created from the example block
  - setup/end - The first setup/end block is passed to the context's setup method

usage:

  tdoc [FILE_GLOB]

The following verbatim block is included with the ':include' directive:

  :include:rdoc/example.rdoc

example:
    # this example is from the README.rdoc file
    >>FOOBAR
    =>'foobar'

